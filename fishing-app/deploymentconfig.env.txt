# .env (Environment Variables Template)
# Copy this to .env and fill in your values
PORT=3000
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
NODE_ENV=development

# API Keys (Get from respective services)
NOAA_API_KEY=your_noaa_api_key
OPENWEATHER_API_KEY=your_openweather_api_key
COPERNICUS_API_KEY=your_copernicus_api_key

# Database
DATABASE_URL=sqlite:./fishing_app.db

---

# Dockerfile
FROM node:18-alpine

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy application code
COPY . .

# Create public directory and copy frontend
RUN mkdir -p public
COPY production_frontend.html public/index.html

# Create data directory for SQLite
RUN mkdir -p data

EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/ || exit 1

CMD ["npm", "start"]

---

# docker-compose.yml
version: '3.8'

services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
# docker-compose.yml
version: '3.8'

services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - NOAA_API_KEY=${NOAA_API_KEY}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

---

# railway.json (Railway Deployment)
{
  "$schema": "https://railway.app/railway.schema.json",
  "build": {
    "builder": "NIXPACKS"
  },
  "deploy": {
    "startCommand": "npm start",
    "restartPolicyType": "ON_FAILURE",
    "restartPolicyMaxRetries": 10
  }
}

---

# vercel.json (Vercel Deployment - Serverless)
{
  "version": 2,
  "builds": [
    {
      "src": "server.js",
      "use": "@vercel/node"
    },
    {
      "src": "public/**",
      "use": "@vercel/static"
    }
  ],
  "routes": [
    {
      "src": "/api/(.*)",
      "dest": "/server.js"
    },
    {
      "src": "/(.*)",
      "dest": "/public/$1"
    }
  ],
  "env": {
    "NODE_ENV": "production"
  }
}

---

# render.yaml (Render Deployment)
services:
  - type: web
    name: nz-fishing-predictor
    env: node
    buildCommand: npm install
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: JWT_SECRET
        generateValue: true
      - key: DATABASE_URL
        fromDatabase:
          name: fishing-db
          property: connectionString
    healthCheckPath: /api/health

databases:
  - name: fishing-db
    databaseName: fishing_app
    user: fishing_user

---

# .gitignore
node_modules/
.env
.env.local
.env.production
fishing_app.db
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.DS_Store
.vscode/
.idea/
*.tgz
*.tar.gz
coverage/
.nyc_output/
data/

---

# Procfile (Heroku Deployment)
web: npm start
release: node setup-db.js